###############################
# @author Wolf Van den Zegel  #
# @since 21/11/2024           #
###############################
# Description: This pod is used to run Keycloak IAM and SQL proxy.
# Usage: kubectl apply -f pod2.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-iam
  labels:
    app: keycloak-iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-iam
  template:
    metadata:
      labels:
        app: keycloak-iam
    spec:
      containers:
        - name: keycloak-iam
          image: quay.io/keycloak/keycloak:26.0.5
          args: ["start-dev"]
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: "admin"
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: "admin"
            - name: KC_PROXY
              value: "edge"
            - name: DB_NAME
              value: "postgresql"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.1
          args:
            - "--private-ip"
            - "--auto-iam-authn"
            - "--structured-logs"
            - "--port=3306"
            - "projectId:us-central1-c:cloud-sql-instance" # ProjectId changed by the end user when following the manual
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: sql-auth-proxy-volume
              mountPath: /secrets/
              readOnly: true
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "250m"
      volumes:
        - name: sql-auth-proxy-volume
          secret:
            secretName: sql-auth-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-iam-service
spec:
  selector:
    app: keycloak-iam
  ports:
    - protocol: TCP
      port: 80 # External port
      targetPort: 8080 # Internal port in the container
---