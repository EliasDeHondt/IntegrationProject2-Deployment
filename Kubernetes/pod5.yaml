###########################
# @author Elias De Hondt  #
# @since 18/11/2024       #
###########################
# Description: This pod is used for ELK stack monitoring.
# Usage: kubectl apply -f pod5.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-secrets
type: Opaque
data:
  elastic_password: MTIz  # 123
  logstash_password: MTIz # 123
  kibana_password: MTIz   # 123
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        user => "elastic"
        password => "${LOGSTASH_INTERNAL_PASSWORD}"
      }
    }
---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: elasticsearch
    labels:
      app: elasticsearch
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch
    template:
      metadata:
        labels:
          app: elasticsearch
      spec:
        containers:
          - name: elasticsearch
            image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
            ports:
              - containerPort: 9200
              - containerPort: 9300
            env:
              - name: discovery.type
                value: single-node
              - name: ELASTIC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: elasticsearch-secrets
                    key: elastic_password
            volumeMounts:
              - name: elasticsearch-data
                mountPath: /usr/share/elasticsearch/data
            resources:
              limits:
                memory: "1Gi"
                cpu: "1"
        volumes:
          - name: elasticsearch-data
            emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
spec:
  selector:
    app: elasticsearch
  ports:
    - name: http
      port: 9200
      targetPort: 9200
    - name: transport
      port: 9300
      targetPort: 9300
  type: ClusterIP
---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: logstash
    labels:
      app: logstash
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: logstash
    template:
      metadata:
        labels:
          app: logstash
      spec:
        containers:
          - name: logstash
            image: docker.elastic.co/logstash/logstash:8.10.2
            ports:
              - containerPort: 5044
              - containerPort: 9600
            env:
              - name: LOGSTASH_INTERNAL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: elasticsearch-secrets
                    key: logstash_password
            volumeMounts:
              - name: logstash-config
                mountPath: /usr/share/logstash/pipeline
        volumes:
          - name: logstash-config
            configMap:
              name: logstash-config
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-service
spec:
  selector:
    app: logstash
  ports:
    - name: beats
      port: 5044
      targetPort: 5044
    - name: http
      port: 9600
      targetPort: 9600
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.10.2
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"
            - name: KIBANA_SYSTEM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-secrets
                  key: kibana_password
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-service
spec:
  selector:
    app: kibana
  ports:
    - name: http
      port: 5601
      targetPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: apache/kafka-native:3.8.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka1:9092"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka1:9093"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_NUM_PARTITIONS
              value: "3"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
---