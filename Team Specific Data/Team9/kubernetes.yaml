###########################
# @author Elias De Hondt  #
# @since 18/11/2024       #
###########################
---
# Source: credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-credentials
type: Opaque
data:
  username: YWRtaW4= # admin
  password: MTIz # 123
---
# Source: credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  username: ZGF0YWJhc2UtdXNlcg== # database-user
  password: MTIz # 123
  url: amRiYzpwb3N0Z3Jlc3FsOi8vbG9jYWxob3N0OjU0MzIvY2F0YW5fZGI=
---
# Source: credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
type: Opaque
data:
  username: YWRtaW4= # admin
  password: MTIz # 123
---
# Source: ingress-multi-domain.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: elias.dehondt@outlook.com
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      - http01:
          ingress:
            class: nginx
---
# Source: ingress-multi-domain.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-redirect: "false" # Redirect HTTP to HTTPS
spec:
  ingressClassName: nginx
  tls:
    - hosts:
      - status.team9.eliasdh.com
      secretName: status-tls
    - hosts:
      - keycloak.team9.eliasdh.com
      secretName: keycloak-iam-tls
    - hosts:
      - www.team9.eliasdh.com
      secretName: www-tls
    - hosts:
      - api.team9.eliasdh.com
      secretName: api-tls
  rules:
    - host: www.team9.eliasdh.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react-frontend-service
                port:
                  number: 80
    - host: api.team9.eliasdh.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-backend-service
                port:
                  number: 80
    - host: status.team9.eliasdh.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: monitoring-service
                port:
                  number: 80
    - host: keycloak.team9.eliasdh.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak-iam-service
                port:
                  number: 80
---
# Source: pod1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend
  labels:
    app: react-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
        - name: react-frontend
          image: "ghcr.io/eliasdehondt/team9-ip2-frontend:kubernetes"
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      imagePullSecrets:
        - name: gitlab-registry
---
# Source: pod1.yaml
apiVersion: v1
kind: Service
metadata:
  name: react-frontend-service
spec:
  selector:
    app: react-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
# Source: pod2.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-iam
  labels:
    app: keycloak-iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-iam
  template:
    metadata:
      labels:
        app: keycloak-iam
    spec:
      containers:
        - name: keycloak-iam
          image: quay.io/keycloak/keycloak:25.0
          args: ["start-dev"]
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: "admin"
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: "admin"
            - name: KC_PROXY
              value: "edge"
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL_HOST
              value: "localhost"
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_NAME
              value: "keycloak"
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-credentials
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-credentials
                  key: password
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.1
          args:
            - "--private-ip"
            - "--auto-iam-authn"
            - "--structured-logs"
            - "--port=5432"
            - "team9-dev4-demo:us-central1:cloud-sql-instance"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: sql-auth-proxy-volume
              mountPath: /secrets/
              readOnly: true
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "250m"
      volumes:
        - name: sql-auth-proxy-volume
          secret:
            secretName: sql-auth-proxy
---
# Source: pod2.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak-iam-service
spec:
  selector:
    app: keycloak-iam
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# Source: pod3.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-backend
  labels:
    app: spring-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spring-backend
  template:
    metadata:
      labels:
        app: spring-backend
    spec:
      containers:
        - name: spring-backend
          image: "ghcr.io/eliasdehondt/team9-ip2-backend:kubernetes"
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: DB_NAME
              value: "database-postgresql"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: AI_URL
              value: "http://python-runtime-service:5000"
            - name: DB_URL
              value: "jdbc:postgresql://localhost:5432/database-postgresql"
          resources:
            limits:
                memory: "4Gi"
                cpu: "2"
            requests:
                memory: "2Gi"
                cpu: "1"
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.1
          args:
            - "--private-ip"
            - "--auto-iam-authn"
            - "--structured-logs"
            - "--port=5432"
            - "team9-dev4-demo:us-central1:cloud-sql-instance"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - name: sql-auth-proxy-volume
              mountPath: /secrets/
              readOnly: true
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "250m"
      imagePullSecrets:
        - name: gitlab-registry
      volumes:
        - name: sql-auth-proxy-volume
          secret:
            secretName: sql-auth-proxy
---
# Source: pod3.yaml
apiVersion: v1
kind: Service
metadata:
  name: spring-backend-service
spec:
  selector:
    app: spring-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: pod4.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-runtime
  namespace: default
  labels:
    app: python-runtime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-runtime
  template:
    metadata:
      labels:
        app: python-runtime
    spec:
      containers:
        - name: python-container
          image: "ghcr.io/eliasdehondt/team9-ip2-ai:latest"
          imagePullPolicy: Always
          resources:
            limits:
              memory: "8Gi"
              cpu: "4"
            requests:
              memory: "4Gi"
              cpu: "2"
          ports:
            - containerPort: 5000
      imagePullSecrets:
        - name: gitlab-registry
---
# Source: pod4.yaml
apiVersion: v1
kind: Service
metadata:
  name: python-runtime-service
  namespace: default
spec:
  selector:
    app: python-runtime
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
---
# Source: pod5.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'blackbox'
        metrics_path: /metrics
        static_configs:
          - targets: ['localhost:9115']
      - job_name: 'blackbox-http'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
              - https://keycloak.team9.eliasdh.com
              - https://www.team9.eliasdh.com
              - https://api.team9.eliasdh.com
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: localhost:9115
---
# Source: pod5.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
                "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://localhost:9090",
                "version": 1
            }
        ]
    }
---
# Source: pod5.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
data:
  provider.yaml: |-
    {
      "apiVersion": 1,
      "providers": [
        {
          "name": "Default",
          "folder": "Services",
          "type": "file",
          "options": {
            "path": "/var/lib/grafana/dashboards"
          }
        }
      ]
    }
---
# Source: pod5.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  status.json: |-
    {
        "annotations": {
            "list": [
            {
              "builtIn": 1,
              "datasource": {
                "type": "grafana",
                "uid": "-- Grafana --"
              },
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
            }
          ]
        },
        "editable": true,
        "fiscalYearStartMonth": 0,
        "graphTooltip": 0,
        "id": 4,
        "links": [],
        "panels": [
          {
            "datasource": {
              "type": "prometheus",
              "uid": "P1809F7CD0C75ACF3"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "fixedColor": "text",
                  "mode": "fixed"
                },
                "custom": {
                  "align": "auto",
                  "cellOptions": {
                    "type": "color-text"
                  },
                  "filterable": false,
                  "inspect": false
                },
                "mappings": [
                  {
                    "options": {
                      "from": 200,
                      "result": {
                        "color": "green",
                        "index": 0,
                        "text": "UP"
                      },
                      "to": 403
                    },
                    "type": "range"
                  },
                  {
                    "options": {
                      "from": 404,
                      "result": {
                        "color": "red",
                        "index": 1,
                        "text": "DOWN"
                      },
                      "to": 600
                    },
                    "type": "range"
                  }
                ],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    }
                  ]
                }
              },
              "overrides": []
            },
            "gridPos": {
              "h": 7,
              "w": 24,
              "x": 0,
              "y": 0
            },
            "id": 2,
            "options": {
              "cellHeight": "sm",
              "footer": {
                "countRows": false,
                "enablePagination": false,
                "fields": "",
                "reducer": [
                  "sum"
                ],
                "show": false
              },
              "showHeader": true,
              "sortBy": [
                {
                  "desc": false,
                  "displayName": "instance"
                }
              ]
            },
            "pluginVersion": "11.4.0",
            "targets": [
              {
                "editorMode": "code",
                "expr": "sum(probe_http_status_code) without (__name__,job)",
                "format": "table",
                "legendFormat": "__auto",
                "range": true,
                "refId": "A"
              }
            ],
            "title": "Current state",
            "transformations": [
              {
                "id": "renameByRegex",
                "options": {
                  "regex": "(instance)",
                  "renamePattern": "Target"
                }
              },
              {
                "id": "renameByRegex",
                "options": {
                  "regex": "Value",
                  "renamePattern": "State"
                }
              },
              {
                "id": "renameByRegex",
                "options": {
                  "regex": "Time",
                  "renamePattern": "Last checked"
                }
              }
            ],
            "type": "table"
          },
          {
            "datasource": {
              "type": "prometheus",
              "uid": "P1809F7CD0C75ACF3"
            },
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "custom": {
                  "axisBorderShow": false,
                  "axisCenteredZero": false,
                  "axisColorMode": "text",
                  "axisGridShow": true,
                  "axisLabel": "",
                  "axisPlacement": "auto",
                  "barAlignment": 0,
                  "barWidthFactor": 0.6,
                  "drawStyle": "line",
                  "fillOpacity": 0,
                  "gradientMode": "none",
                  "hideFrom": {
                    "legend": false,
                    "tooltip": false,
                    "viz": false
                  },
                  "insertNulls": false,
                  "lineInterpolation": "linear",
                  "lineStyle": {
                    "fill": "solid"
                  },
                  "lineWidth": 1,
                  "pointSize": 5,
                  "scaleDistribution": {
                    "type": "linear"
                  },
                  "showPoints": "auto",
                  "spanNulls": false,
                  "stacking": {
                    "group": "A",
                    "mode": "none"
                  },
                  "thresholdsStyle": {
                    "mode": "off"
                  }
                },
                "mappings": [],
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    }
                  ]
                }
              },
              "overrides": []
            },
            "gridPos": {
              "h": 9,
              "w": 24,
              "x": 0,
              "y": 7
            },
            "id": 1,
            "interval": "30s",
            "options": {
              "legend": {
                "calcs": [],
                "displayMode": "list",
                "placement": "bottom",
                "showLegend": true
              },
              "tooltip": {
                "mode": "single",
                "sort": "none"
              }
            },
            "pluginVersion": "11.4.0",
            "targets": [
              {
                "editorMode": "code",
                "expr": "sum(probe_http_status_code) without (__name__,job)",
                "legendFormat": "__auto",
                "range": true,
                "refId": "A"
              }
            ],
            "timeFrom": "6h",
            "title": "Status code over time",
            "type": "timeseries"
          }
        ],
        "preload": false,
        "refresh": "30s",
        "schemaVersion": 40,
        "tags": [],
        "templating": {
          "list": []
        },
        "time": {
          "from": "now",
          "to": "now"
        },
        "timepicker": {},
        "timezone": "browser",
        "title": "Service Status",
        "uid": "fe7hz34qa94aob",
        "version": 4,
        "weekStart": ""
      }
---
# Source: pod5.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring 
  labels:
    app: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring
  template:
    metadata:
      labels:
        app: monitoring
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: monitoring-credentials
                  key: username
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: monitoring-credentials
                  key: password
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-provider
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: prometheus-server-conf
              mountPath: /etc/prometheus
        - name: blackbox-exporter
          image: prom/blackbox-exporter:latest
          ports:
            - containerPort: 9115
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-dashboards
          configMap:
            defaultMode: 420
            name: grafana-dashboards
        - name: grafana-dashboard-provider
          configMap:
            defaultMode: 420
            name: grafana-dashboard-provider
        - name: prometheus-server-conf
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
---
# Source: pod5.yaml
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  labels:
    app: monitoring
spec:
  selector:
    app: monitoring
  ports:
    - name: grafana
      protocol: TCP
      port: 80
      targetPort: 3000
---